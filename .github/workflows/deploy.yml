name: Build and Push to ecr and deploy in app runner .

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: test
  ECR_BASE_REPOSITORY: base_test

jobs:
  build-push-sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Check if requirements.txt has changed
        id: requirements-check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^requirements.txt$'; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi 
      
      - name: Push base image to ecr if requirements.txt changes
        if: steps.requirements-check.outputs.changed == 'true'
        run: |
          docker build -f Dockerfile.base -t ${{ env.DOCKERHUB_BASE_IMAGE_NAME }}:latest .
          ECR_BASE_IMAGE_NAME=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_BASE_REPOSITORY }}
          docker tag ${{ env.DOCKERHUB_BASE_IMAGE_NAME }}:latest $ECR_BASE_IMAGE_NAME:latest
          docker push $ECR_BASE_IMAGE_NAME:latest
          
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKERHUB_IMAGE_NAME }}:${{ github.run_number }} .
          ECR_IMAGE_NAME=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}
          docker tag ${{ env.DOCKERHUB_IMAGE_NAME }}:${{ github.run_number }} $ECR_IMAGE_NAME:latest
          ECR_IMAGE_NAME=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}
          docker push $ECR_IMAGE_NAME:latest
